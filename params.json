{"name":"Headlessbrowsers","tagline":"A list of (almost) all headless web browsers in existence","body":"Headless Browsers\r\n================\r\n\r\n### A list of (almost) all headless web browsers in existence\r\n\r\n* [PhantomJS](http://phantomjs.org/) - PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG.\r\n* [CasperJS](http://casperjs.org/) - CasperJS is an open source navigation scripting & testing utility written in Javascript for the PhantomJS WebKit headless browser and SlimerJS (Gecko).\r\n* [Zombie.js](http://zombie.labnotes.org/) - Zombie.js is a lightweight framework for testing client-side JavaScript code in a simulated environment. No browser required.\r\n* [Lotte](https://github.com/StanAngeloff/lotte) - Lotte is a headless, automated testing framework built on top of PhantomJS and inspired by Ghostbuster.\r\n* [Ghostbuster](https://github.com/joshbuddy/ghostbuster) - Automated browser testing via phantom.js, with all of the pain taken out! That means you get a real browser, with a real DOM, and can do real testing!\r\n* [HeadlessBrowser](https://github.com/clubajax/HeadlessBrowser) - A very miniature headless browser, for testing the DOM on Node.js\r\n* [browser.rb](https://github.com/tmp8/browser-rb) - Headless Ruby browser on top of Nokogiri and TheRubyRacer\r\n* [Selenium](http://seleniumhq.org) - Selenium is a suite of tools to automate web browsers across many platforms.\r\n* [SlimerJS](http://slimerjs.org/) - SlimerJS is similar to PhantomJs, except that it runs Gecko, the browser engine of Mozilla Firefox, instead of Webkit (And it is not yet truly headless).\r\n* [trifleJS](http://triflejs.org/) - A headless Internet Explorer browser using the .NET WebBrowser Class with a Javascript API running on the V8 engine.\r\n* [DalekJS](http://dalekjs.com/) - Automated cross browser testing with JavaScript.\r\n* [HtmlUnit](http://htmlunit.sourceforge.net/) - HtmlUnit is a \"GUI-Less browser for Java programs\". \r\n* [ghost.py](http://jeanphix.me/Ghost.py/) - ghost.py is a webkit web client written in python.\r\n* [twill](http://twill.idyll.org/) - twill is a simple language that allows users to browse the Web from a command-line interface.\r\n* [Awesomium](http://www.awesomium.com/) - Chromium-based headless browser engine\r\n* [SimpleBrowser](https://github.com/axefrog/SimpleBrowser) - A flexible and intuitive web browser engine designed for automation tasks. Built on the .Net 4 framework.\r\n* [Envjs](http://www.envjs.com/) - Envjs is a simulated browser environment written in javascript.\r\n* [Watir-WebDriver](http://watirwebdriver.com/) -  The most elegant way to use Selenium WebDriver with ruby.\r\n* [Spynner](https://github.com/makinacorpus/spynner) - Programmatic web browsing module with AJAX support for Python\r\n* [WatiN](http://watin.org/) - Web Application Testing In .Net\r\n* [Crowbar](http://simile.mit.edu/wiki/Crowbar) - Crowbar is a web scraping environment based on the use of a server-side headless mozilla-based browser.\r\n* [BrowserKit](https://github.com/symfony/BrowserKit) - BrowserKit simulates the behavior of a web browser.\r\n* [SST](http://testutils.org/sst/) - SST (selenium-simple-test) is a web test framework that uses Python to generate functional browser-based tests.\r\n* [stanislaw](https://github.com/teddziuba/stanislaw) - Python headless browser testing\r\n* [Jabba-Webkit](https://github.com/jabbalaci/Jabba-Webkit) - Jabba's headless webkit browser for scraping AJAX-powered webpages.\r\n* [Jaunt](http://jaunt-api.com/) - Java Web Scraping & Automation API\r\n* [Geb](http://www.gebish.org/) - Geb is a browser automation solution.\r\n* [Jasmine-Headless-Webkit](http://johnbintz.github.io/jasmine-headless-webkit/) - jasmine-headless-webkit uses the QtWebKit widget to run your specs without needing to render a pixel.\r\n* [phantompy](https://github.com/niwibe/phantompy) - Phantompy is a headless WebKit engine with powerful pythonic api build on top of Qt5 Webkit\r\n* [Python-Webkit](http://www.gnu.org/software/pythonwebkit/) - Python-Webkit is a python extension to Webkit to add full, complete access\r\nto Webkit's DOM\r\n* [Splinter](http://splinter.cobrateam.info/) - Splinter is an open source tool for testing web applications using Python. It lets you automate browser actions, such as visiting URLs and interacting with their items.\r\n* [Browserjet](https://github.com/briankircho/browserjet) - Headless webkit browser with node.js interface.\r\n* [Headless](https://github.com/roryprimrose/Headless) - Headless browser support for fast web acceptance testing in .Net\r\n* [browser-launcher](https://github.com/substack/browser-launcher) - detect and launch browser versions, headlessly or otherwise\r\n* [headless_browser](https://github.com/alexandernst/headless_browser) - Headless browser based on WebKit written in C++.\r\n* [Guillotine](https://github.com/yetanotherchris/Guillotine) - A .NET headless browser, written in C#.\r\n* [benv](https://github.com/artsy/benv) - Stub a browser environment in node.js and headlessly test your client-side code.\r\n* [grope](https://github.com/youpy/grope) - A non-GUI library to represent browser environment using WebKit Framework + RubyCocoa\r\n* [RoboBrowser](https://github.com/jmcarp/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\r\n* [MechanicalSoup](https://github.com/hickford/MechanicalSoup) - A Python library for automating interaction with websites.\r\n* [mechanize](http://wwwsearch.sourceforge.net/mechanize/) - Stateful programmatic web browsing.\r\n* [jedi-crawler](https://github.com/spacenick/jedi-crawler) - Lightsabing Node/PhantomJS crawler; scrape dynamic content : without the hassle\r\n* [Splash](https://github.com/scrapinghub/splash) - Splash is a javascript rendering service with an HTTP API. It's a lightweight browser with an HTTP API, implemented in Python using Twisted and QT.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}